package com.admin;

//This file is made by Lalit
import com.Postgre;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Lalit
 */
public class EmployeeIF extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmployeeIF
     */
    Connection conn;
    String username;

    public EmployeeIF(Connection c, String uname) {
        this.conn = c;
        this.username = uname;
        initComponents();
        this.showAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpGender = new javax.swing.ButtonGroup();
        jtab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblUsername2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtfname = new javax.swing.JTextField();
        lblUsername3 = new javax.swing.JLabel();
        lblPassword1 = new javax.swing.JLabel();
        txtlname = new javax.swing.JTextField();
        txtcontact = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        lblPassword2 = new javax.swing.JLabel();
        lblUsername4 = new javax.swing.JLabel();
        lblPassword3 = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        lblUsername5 = new javax.swing.JLabel();
        txtaddress = new java.awt.TextArea();
        lblUsername6 = new javax.swing.JLabel();
        lblUsername7 = new javax.swing.JLabel();
        txtcountry = new javax.swing.JTextField();
        lblPassword4 = new javax.swing.JLabel();
        lblPassword5 = new javax.swing.JLabel();
        lblPassword6 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        txtstate = new javax.swing.JTextField();
        txtpincode = new javax.swing.JTextField();
        lblPassword7 = new javax.swing.JLabel();
        cbvalid = new javax.swing.JCheckBox();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        rbmale = new javax.swing.JRadioButton();
        rbfemale = new javax.swing.JRadioButton();
        lblUsername8 = new javax.swing.JLabel();
        txtdob = new com.toedter.calendar.JDateChooser();
        txthiredate = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setPreferredSize(new java.awt.Dimension(1500, 900));

        jtab.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jScrollPane1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        tblEmp.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmp.setRowHeight(22);
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmp);

        jtab.addTab("Table", jScrollPane1);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        lblUsername2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername2.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername2.setText("Username");

        txtUsername.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txtfname.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblUsername3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername3.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername3.setText("First Name");

        lblPassword1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword1.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword1.setText("Last Name");

        txtlname.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txtcontact.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txtemail.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblPassword2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword2.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword2.setText("E-Mail");

        lblUsername4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername4.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername4.setText("Contact No.");

        lblPassword3.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword3.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword3.setText("Age");

        txtage.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblUsername5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername5.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername5.setText("Gender");

        txtaddress.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblUsername6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername6.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername6.setText("Address");

        lblUsername7.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername7.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername7.setText("Hire Date");

        txtcountry.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblPassword4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword4.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword4.setText("Country");

        lblPassword5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword5.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword5.setText("State");

        lblPassword6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword6.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword6.setText("City");

        txtcity.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txtstate.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txtpincode.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        lblPassword7.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblPassword7.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword7.setText("Pincode");

        cbvalid.setBackground(new java.awt.Color(0, 153, 153));
        cbvalid.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        cbvalid.setForeground(new java.awt.Color(255, 255, 255));
        cbvalid.setText("Valid");

        btnupdate.setBackground(new java.awt.Color(255, 255, 255));
        btnupdate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(0, 153, 153));
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(255, 255, 255));
        btndelete.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btndelete.setForeground(new java.awt.Color(0, 153, 153));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnclear.setBackground(new java.awt.Color(255, 255, 255));
        btnclear.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnclear.setForeground(new java.awt.Color(0, 153, 153));
        btnclear.setText("Clear Form");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnadd.setBackground(new java.awt.Color(255, 255, 255));
        btnadd.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnadd.setForeground(new java.awt.Color(0, 153, 153));
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        rbmale.setBackground(new java.awt.Color(0, 153, 153));
        btngrpGender.add(rbmale);
        rbmale.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        rbmale.setForeground(new java.awt.Color(204, 204, 204));
        rbmale.setText("Male");

        rbfemale.setBackground(new java.awt.Color(0, 153, 153));
        btngrpGender.add(rbfemale);
        rbfemale.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        rbfemale.setForeground(new java.awt.Color(204, 204, 204));
        rbfemale.setText("Female");

        lblUsername8.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        lblUsername8.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername8.setText("DOB");

        txtdob.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        txthiredate.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblUsername3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(rbmale)
                        .addGap(36, 36, 36)
                        .addComponent(rbfemale))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUsername7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txthiredate, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUsername2)
                        .addGap(34, 34, 34)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsername6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(txtcontact, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblPassword7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblUsername8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtdob, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword1)
                        .addGap(7, 7, 7)
                        .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbvalid)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(cbvalid)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblUsername8))
                            .addComponent(txtdob, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(txthiredate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUsername7)
                                .addGap(41, 41, 41)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblUsername2))
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblUsername3))
                            .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblUsername4))
                            .addComponent(txtcontact, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername5)
                            .addComponent(rbmale)
                            .addComponent(rbfemale))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblUsername6))
                            .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtab.addTab("Details", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtab, javax.swing.GroupLayout.DEFAULT_SIZE, 1488, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtab, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        if (!isEmptyData()) {
            updateEmployee(initialUsername);
        }
        showAll();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        addEmployee();
        showAll();
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnclearActionPerformed

    String initialUsername;
    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        // TODO add your handling code here:
        int totalRows = tblEmp.getRowCount();
        int totalCols = tblEmp.getColumnCount();

        int row = tblEmp.getSelectedRow();
        TableModel tm = tblEmp.getModel();

        initialUsername = (String) tm.getValueAt(row, 0);

        txtUsername.setText((String) tm.getValueAt(row, 0));
        txtfname.setText((String) tm.getValueAt(row, 1));
        txtlname.setText((String) tm.getValueAt(row, 2));
        String gender = (String) tm.getValueAt(row, 3);
        txtage.setText((String) tm.getValueAt(row, 4));
        txtemail.setText((String) tm.getValueAt(row, 5));
        txtcontact.setText((String) tm.getValueAt(row, 6));
        txtaddress.setText((String) tm.getValueAt(row, 7));
        txtcity.setText((String) tm.getValueAt(row, 8));
        txtstate.setText((String) tm.getValueAt(row, 9));
        txtcountry.setText((String) tm.getValueAt(row, 10));
        txtpincode.setText((String) tm.getValueAt(row, 11));
        Timestamp hireDate = (Timestamp) tm.getValueAt(row, 12);
        txthiredate.setDate(hireDate);
        cbvalid.setSelected((boolean) tm.getValueAt(row, 13));
        Timestamp dob = (Timestamp) tm.getValueAt(row, 14);
        txtdob.setDate(dob);

        if (gender.equalsIgnoreCase("male")) {
            rbmale.setSelected(true);
        } else {
            rbfemale.setSelected(true);
        }

        jtab.setSelectedIndex(1);

    }//GEN-LAST:event_tblEmpMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        deleteEmployee();
        clearForm();
        showAll();

    }//GEN-LAST:event_btndeleteActionPerformed

    void showAll() {

        Vector heading = new Vector();
        heading.add("Username");
        heading.add("First Name");
        heading.add("Last Name");
        heading.add("Gender");
        heading.add("Age");
        heading.add("Email");
        heading.add("Contact No,");
        heading.add("Address");
        heading.add("City");
        heading.add("State");
        heading.add("Country");
        heading.add("Pincode");
        heading.add("Hiredate");
        heading.add("Valid");
        heading.add("Birth Date");

        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            String sql = "select * from employeedetails";

            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            Vector data = new Vector();
            while (rs.next()) {
                String usernameForAge = rs.getString("username");
                String sqlForAge = "select * from refreshempage(?)";
                PreparedStatement psForAge = conn.prepareStatement(sqlForAge);
                psForAge.setString(1, usernameForAge);
                ResultSet rsForAge = psForAge.executeQuery();
                String age = null;
                if (rsForAge.next()) {
                    age = rsForAge.getObject(1) + " years";
                }

                Vector row = new Vector();
                row.add(rs.getString("username"));
                row.add(rs.getString("fname"));
                row.add(rs.getString("lname"));
                row.add(rs.getString("gender"));
                row.add(age);
                row.add(rs.getString("email"));
                row.add(rs.getString("contactno"));
                row.add(rs.getString("address"));
                row.add(rs.getString("city"));
                row.add(rs.getString("state_name"));
                row.add(rs.getString("country"));
                row.add(rs.getString("pincode"));
                row.add(rs.getTimestamp("hire_date"));
                row.add(rs.getBoolean("validity"));
                row.add(rs.getTimestamp("birth_date"));

                data.add(row);
            }
            DefaultTableModel tm = new DefaultTableModel(data, heading);
            tblEmp.setModel(tm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        }

    }

    void clearForm() {
        txthiredate.setDate(null);
        txtdob.setDate(null);
        txtUsername.setText("");
        txtfname.setText("");
        txtlname.setText("");
        txtage.setText("");
        txtcontact.setText("");
        txtemail.setText("");
        txtaddress.setText("");
        txtpincode.setText("");
        txtcity.setText("");
        txtstate.setText("");
        txtcountry.setText("");
        cbvalid.setSelected(false);
        rbmale.setSelected(false);
        rbfemale.setSelected(false);
    }

    boolean isEmptyData() {
        String Username = txtUsername.getText().trim();
        Date DOB = txtdob.getDate();
        String fname = txtfname.getText().trim();
        String lname = txtlname.getText().trim();
        String contact = txtcontact.getText().trim();
        String email = txtemail.getText().trim();
        String address = txtaddress.getText().trim();
        String city = txtcity.getText().trim();
        String state = txtstate.getText().trim();
        String country = txtcountry.getText().trim();
        String pincode = txtpincode.getText().trim();

        if (DOB == null) {
            JOptionPane.showMessageDialog(this, "Please select Date of Birth");
            return true;
        }
        if (Username.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Username");
            return true;
        }
        if (fname.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill First Name");
            return true;
        }
        if (lname.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Last Name");
            return true;
        }
        if (contact.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Contact Number");
            return true;
        }
        if (email.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Email");
            return true;
        }
        if (address.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Address");
            return true;
        }
        if (city.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill City");
            return true;
        }
        if (state.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill State");
            return true;
        }
        if (country.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Country");
            return true;
        }
        if (pincode.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Please fill Pincode");
            return true;
        }

        return false;
    }

    int addEmployee() {
        //add karte tym age nahi daali apne aap db procedure calculate kar dega
        //or hire date by default now() hai
        
        if(isEmptyData()){
            return 0;
        }

        String Username = txtUsername.getText().trim();
        PreparedStatement ps = null;
        ResultSet rs = null;
        boolean exist = false;
        try {
            String sql = "select * from employeedetails where username=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, Username);
            rs = ps.executeQuery();
            if(rs.next()){
                exist = true;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        } finally {
            Postgre p = new Postgre();
            p.closeConn(null, ps, rs);
        }
        System.out.println(exist);

        if(exist){
            JOptionPane.showMessageDialog(this, "User with Username : "+Username + " exists. Try another Username.");            
            return 0;
        }
        
            Date DOB = txtdob.getDate();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String strDate = dateFormat.format(DOB);
            Timestamp dobt = changeDateFormat(strDate);
            Date date = txthiredate.getDate();
            dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            strDate = dateFormat.format(date);
            Timestamp hireDate = changeDateFormat(strDate);

            String gender = null;
            if (rbmale.isSelected()) {
                gender = "Male";
            } else if (rbfemale.isSelected()) {
                gender = "Female";
            }

            boolean valid = cbvalid.isSelected();
            String fname = txtfname.getText().trim();
            String lname = txtlname.getText().trim();
            String contact = txtcontact.getText().trim();
            String email = txtemail.getText().trim();
            String address = txtaddress.getText().trim();
            String city = txtcity.getText().trim();
            String state = txtstate.getText().trim();
            String country = txtcountry.getText().trim();
            String pincode = txtpincode.getText().trim();

            String sql = "insert into employeedetails(username, fname, lname, gender, email, contactno, address, city, state_name,    country, pincode, birth_date, validity, hire_date) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

            try {
                ps = conn.prepareStatement(sql);
                ps.setString(1, Username);
                ps.setString(2, fname);
                ps.setString(3, lname);
                ps.setString(4, gender);
                ps.setString(5, email);
                ps.setString(6, contact);
                ps.setString(7, address);
                ps.setString(8, city);
                ps.setString(9, state);
                ps.setString(10, country);
                ps.setString(11, pincode);
                ps.setTimestamp(12, dobt);
                ps.setBoolean(13, valid);
                ps.setTimestamp(14, hireDate);

                int i = ps.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(this, i + " Employee data inserted !!!");
                } else {
                    JOptionPane.showMessageDialog(this, "Some error occured. Try again!");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
                e.printStackTrace();
            } finally {
                Postgre p = new Postgre();
                p.closeConn(null, ps, null);
            }

            return 1;
    }

    void deleteEmployee() {

        String uname = txtUsername.getText();
        int op = JOptionPane.showConfirmDialog(this, "are you sure to delete record with username " + uname + " ? ", "Delete Record", JOptionPane.YES_NO_OPTION,
              JOptionPane.QUESTION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            PreparedStatement ps = null;
            try {
                String q = "delete from employeedetails  where username=?";
                ps = conn.prepareStatement(q);
                ps.setString(1, uname);
                int count = ps.executeUpdate();
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, count + " record with username : " + uname + " deleted !!!");
                } else {
                    JOptionPane.showMessageDialog(this, "no record with username : " + uname + " deleted !!!");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                Postgre p = new Postgre();
                p.closeConn(null, ps, null);
            }

        }

    }

    void updateEmployee(String oldUsername) {
        String newUsername = txtUsername.getText();

        Date date = txthiredate.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String strHireDate = dateFormat.format(date);
        Timestamp tymstmpHireDate = changeDateFormat(strHireDate);

        date = txtdob.getDate();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String strBirthDate = dateFormat.format(date);
        Timestamp tymstmpBirthDate = changeDateFormat(strBirthDate);

        boolean valid = cbvalid.isSelected();
        String fname = txtfname.getText();
        String lname = txtlname.getText();
        String contact = txtcontact.getText();
        String email = txtemail.getText();

        String gender = null;
        if (rbmale.isSelected()) {
            gender = "Male";
        } else if (rbfemale.isSelected()) {
            gender = "Female";
        }

        String address = txtaddress.getText();
        String city = txtcity.getText();
        String state = txtstate.getText();
        String country = txtcountry.getText();
        String pincode = txtpincode.getText();

        PreparedStatement ps = null;
        try {
            String sql = "update employeedetails set username=?, fname=?, lname=?, gender=?, email=?, contactno=?, address=?, city=?, state_name=?, country=?, validity=?, pincode=?, birth_date=?, hire_date=? where username=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, newUsername);
            ps.setString(2, fname);
            ps.setString(3, lname);
            ps.setString(4, gender);
            ps.setString(5, email);
            ps.setString(6, contact);
            ps.setString(7, address);
            ps.setString(8, city);
            ps.setString(9, state);
            ps.setString(10, country);
            ps.setBoolean(11, valid);
            ps.setString(12, pincode);
            ps.setTimestamp(13, tymstmpBirthDate);
            ps.setTimestamp(14, tymstmpHireDate);
            ps.setString(15, oldUsername);

            int count = ps.executeUpdate();

            if (count > 0) {
                String sqlForAge = "update employeedetails set age=  (SELECT date_part('year' , AGE((SELECT birth_date from  employeedetails where username=?))))::int where username=?";
                ps = conn.prepareStatement(sqlForAge);
                ps.setString(1, newUsername);
                ps.setString(2, newUsername);
                count = ps.executeUpdate();
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, count + " rows updated");
                } else {
                    JOptionPane.showMessageDialog(this, "Data not updated. Try again with valid data.!!!");
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        } finally {
            Postgre p = new Postgre();
            p.closeConn(null, ps, null);
        }

    }

    public Timestamp changeDateFormat(String inputDate) {
        //use to convert simple text "yyyy-MM-dd" to timestamp
        String input = inputDate;

        String INPUT_FORMAT = "yyyy-MM-dd";
        String OUTPUT_FORMAT = "yyyy-MM-dd HH:mm:ss.SSS";

        DateFormat inputFormatter = new SimpleDateFormat(INPUT_FORMAT);
        DateFormat outputFormatter = new SimpleDateFormat(OUTPUT_FORMAT);

        java.util.Date date = null;
        String output = null;
        Timestamp ts = null;
        try {
            date = inputFormatter.parse(input);

            output = outputFormatter.format(date);

            ts = Timestamp.valueOf(output);
        } catch (Exception e) {
            e.printStackTrace();
        }

        return ts;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndelete;
    private javax.swing.ButtonGroup btngrpGender;
    private javax.swing.JButton btnupdate;
    private javax.swing.JCheckBox cbvalid;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jtab;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JLabel lblPassword2;
    private javax.swing.JLabel lblPassword3;
    private javax.swing.JLabel lblPassword4;
    private javax.swing.JLabel lblPassword5;
    private javax.swing.JLabel lblPassword6;
    private javax.swing.JLabel lblPassword7;
    private javax.swing.JLabel lblUsername2;
    private javax.swing.JLabel lblUsername3;
    private javax.swing.JLabel lblUsername4;
    private javax.swing.JLabel lblUsername5;
    private javax.swing.JLabel lblUsername6;
    private javax.swing.JLabel lblUsername7;
    private javax.swing.JLabel lblUsername8;
    private javax.swing.JRadioButton rbfemale;
    private javax.swing.JRadioButton rbmale;
    private javax.swing.JTable tblEmp;
    private javax.swing.JTextField txtUsername;
    private java.awt.TextArea txtaddress;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcontact;
    private javax.swing.JTextField txtcountry;
    private com.toedter.calendar.JDateChooser txtdob;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfname;
    private com.toedter.calendar.JDateChooser txthiredate;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtpincode;
    private javax.swing.JTextField txtstate;
    // End of variables declaration//GEN-END:variables
}
